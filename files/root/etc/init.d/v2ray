#!/bin/sh /etc/rc.common

START=90
STOP=15
USE_PROCD=1
NAME=v2ray
EXTRA_COMMANDS=rules

GENERATE_CONF="/usr/share/v2ray/gen_config.lua"

uci_get_by_name() {
    local ret=$(uci get ${NAME}.$1.$2 2> /dev/null)
    echo ${ret:=$3}
}

uci_get_by_type() {
    local ret=$(uci get ${NAME}.@$1[0].$2 2> /dev/null)
    echo ${ret:=$3}
}

uci_bool_by_name() {
    case "$(uci_get_by_name $1 $2)" in
        1 | on | true | yes | enabled) return 0 ;;
    esac
    return 1
}

validate_server() {
    [[ "$(uci get ${NAME}.$1 2> /dev/null)" = "servers" ]]
}

# 生成配置文件
gen_config_file() {
    local config_file=/var/etc/${NAME}.$1.json
    /usr/bin/lua ${GENERATE_CONF} > ${config_file}
    echo ${config_file}
}

# 启动V2ray服务
start_v2ray() {
    v2ray_bin=$(uci_get_by_type general v2ray_bin)
    command -v ${v2ray_bin} > /dev/null 2>&1 || return 1
    local main_server=$(uci_get_by_type transparent_proxy main_server)
    validate_server ${main_server} || return 1
    echo "server=/#/127.0.0.1#$(uci_get_by_type transparent_proxy dns_port)" > /tmp/dnsmasq.d/v2ray.conf
    echo "conf-dir=/usr/share/dnsmasq-white-list" >> /tmp/dnsmasq.d/v2ray.conf
    procd_open_instance
    procd_set_param respawn
    procd_set_param command $v2ray_bin
    procd_append_param command -config
    procd_append_param command $(gen_config_file ${main_server})
    procd_set_param env V2RAY_LOCATION_ASSET=/usr/share/v2ray
    procd_set_param stdout 1
    procd_set_param stderr 1
    procd_set_param file /etc/config/v2ray
    procd_close_instance
    /etc/init.d/dnsmasq restart
}

# =====================================================================================

start_service() {
    config_load ${NAME}
    mkdir -p /var/run /var/etc
    start_v2ray 
}

stop_service() {
    rm /tmp/dnsmasq.d/v2ray.conf
    /etc/init.d/dnsmasq restart
}

service_triggers()
{
    procd_add_reload_trigger "/etc/config/v2ray"
}
